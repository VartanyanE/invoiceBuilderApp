[{"/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/index.js":"1","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/App.js":"2","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/context/UserContext.js":"3","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/context/ClickedContext.js":"4","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/Login.js":"5","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/Register.js":"6","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/pages/Invoice.js":"7","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/pages/Home.js":"8","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/theme.js":"9","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/AuthOptions.js":"10","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/utils/API.js":"11","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/topNav/TopNav.js":"12","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/form/Form.js":"13","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/form/Item.js":"14"},{"size":197,"mtime":1621486461478,"results":"15","hashOfConfig":"16"},{"size":1991,"mtime":1621559592370,"results":"17","hashOfConfig":"16"},{"size":76,"mtime":1621486461478,"results":"18","hashOfConfig":"16"},{"size":76,"mtime":1621486461478,"results":"19","hashOfConfig":"16"},{"size":5430,"mtime":1621486461477,"results":"20","hashOfConfig":"16"},{"size":6768,"mtime":1621486461477,"results":"21","hashOfConfig":"16"},{"size":9587,"mtime":1622267783081,"results":"22","hashOfConfig":"16"},{"size":854,"mtime":1621486461478,"results":"23","hashOfConfig":"16"},{"size":327,"mtime":1621486461478,"results":"24","hashOfConfig":"16"},{"size":980,"mtime":1621486461477,"results":"25","hashOfConfig":"16"},{"size":1157,"mtime":1621490190154,"results":"26","hashOfConfig":"16"},{"size":1193,"mtime":1621486461478,"results":"27","hashOfConfig":"16"},{"size":10057,"mtime":1621818743608,"results":"28","hashOfConfig":"16"},{"size":1277,"mtime":1621486461477,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1o4fiam",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/index.js",[],["66","67"],"/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/App.js",["68"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/pages/Home\";\n// import Grids from \"./components/grids/Grids\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Invoice from \"./components/pages/Invoice\";\nimport UserContext from \"./context/UserContext\";\nimport ClickedContext from \"./context/ClickedContext\";\nimport axios from \"axios\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst App = () => {\n  const [userData, setUserData] = useState([\n    {\n      user: \"\",\n    },\n  ]);\n\n  const [clicked, setClicked] = useState(false);\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await axios.post(\n        \"http://localhost:3001/users/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      console.log(tokenRes.data);\n      if (tokenRes.data) {\n        const userRes = await axios.get(\"http://localhost:3001/users/\", {\n          headers: { \"x-auth-token\": token },\n        });\n\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={{ userData, setUserData }}>\n        <ClickedContext.Provider value={{ clicked, setClicked }}>\n          <Switch>\n            <Route exact path=\"/\" component={Invoice} />\n            <Route path=\"/home\" component={Home} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/invoice\" component={Invoice} />\n          </Switch>\n        </ClickedContext.Provider>\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/context/UserContext.js",[],"/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/context/ClickedContext.js",[],"/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/Login.js",["69","70"],"import React, { useState, useContext } from \"react\";\nimport Axios from \"axios\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport UserContext from \"../../context/UserContext\";\nimport ClickedContext from \"../../context/ClickedContext\";\nimport { useHistory } from \"react-router-dom\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright Â© \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n  },\n  image: {\n    backgroundImage: \"url(https://source.unsplash.com/random)\",\n    backgroundRepeat: \"no-repeat\",\n    backgroundColor:\n      theme.palette.type === \"light\"\n        ? theme.palette.grey[50]\n        : theme.palette.grey[900],\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center\",\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  center: {\n    justifyContent: \"center\",\n  },\n}));\n\nexport default function SignInSide() {\n  const classes = useStyles();\n  const [email, setEmail] = useState(localStorage.getItem(\"email\"));\n  const [password, setPassword] = useState();\n  // const [clicked, setClicked] = useState(false);\n\n  const history = useHistory();\n  const { setUserData } = useContext(UserContext);\n  const { clicked, setClicked } = useContext(ClickedContext);\n  const loginSubmit = async (e) => {\n    e.preventDefault();\n    const loggedUser = { email, password };\n\n    const logRes = await Axios.post(\n      \"http://localhost:3001/users/login\",\n      loggedUser\n    );\n    setUserData({\n      token: logRes.data.token,\n      user: logRes.data.user,\n    });\n    localStorage.setItem(\"auth-token\", logRes.data.token);\n    if (clicked) {\n      localStorage.setItem(\"email\", email);\n    }\n    history.push(\"/\");\n  };\n  console.log(clicked);\n  let checkAuth = localStorage.getItem(\"auth-token\");\n  return (\n    <Grid container component=\"main\" className={classes.root}>\n      <CssBaseline />\n      <Grid item xs={false} sm={4} md={7} className={classes.image} />\n      <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <form className={classes.form} noValidate onSubmit={loginSubmit}>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label={\n                !localStorage.getItem(\"email\")\n                  ? \"Email Address\"\n                  : localStorage.getItem(\"email\")\n              }\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n              onChange={(e) =>\n                localStorage.getItem(\"email\")\n                  ? setEmail(localStorage.getItem(\"email\"))\n                  : setEmail(e.target.value)\n              }\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <FormControlLabel\n              onClick={(e) =>\n                e.target.checked ? setClicked(true) : setClicked(false)\n              }\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n            >\n              Sign In\n            </Button>\n            <Grid container className={classes.center}>\n              <Grid item>\n                <Link href=\"/register\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n            <Box mt={5}>\n              <Copyright />\n            </Box>\n          </form>\n        </div>\n      </Grid>\n    </Grid>\n  );\n}\n","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/Register.js",["71","72"],"// import Axios from \"axios\";\n// import React, { useState, useContext } from \"react\";\n// import UserContext from \"../../context/UserContext\";\n// import { useHistory } from \"react-router-dom\";\n\n// export default function Register() {\n//   const [email, setEmail] = useState();\n//   const [password, setPassword] = useState();\n//   const [passwordCheck, setPasswordCheck] = useState();\n//   const [displayName, setDisplayName] = useState();\n//   const history = useHistory();\n//   const { setUserData } = useContext(UserContext);\n\n//   const submit = async (e) => {\n//     e.preventDefault();\n//     const newUser = { email, password, passwordCheck, displayName };\n\n//     await Axios.post(\"http://localhost:3001/users/register\", newUser);\n//     const loginRes = await Axios.post(\"http://localhost:3001/users/login\", {\n//       email,\n//       password,\n//     });\n//     setUserData({\n//       token: loginRes.data.token,\n//       user: loginRes.data.user,\n//     });\n//     localStorage.setItem(\"auth-token\", loginRes.data.token);\n//     history.push(\"/\");\n//   };\n//   return (\n//     <div>\n//       <h2>Register</h2>\n//       <form onSubmit={submit}>\n//         <label htmlFor=\"register-email\">Email</label>\n//         <input\n//           id=\"register-email\"\n//           type=\"email\"\n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n\n//         <label htmlFor=\"register-password\">Password</label>\n//         <input\n//           id=\"register-password\"\n//           type=\"password\"\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Verify-Password\"\n//           onChange={(e) => setPasswordCheck(e.target.value)}\n//         />\n\n//         <label htmlFor=\"register-display-name\">Display Name</label>\n//         <input\n//           id=\"register-display-name\"\n//           type=\"text\"\n//           onChange={(e) => setDisplayName(e.target.value)}\n//         />\n\n//         <input type=\"submit\" value=\"register\" />\n//       </form>\n//     </div>\n//   );\n// }\n\nimport Axios from \"axios\";\nimport React, { useState, useContext } from \"react\";\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright Â© '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  center: {\n    justifyContent: \"center\"\n  }\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  \n  const [displayName, setDisplayName] = useState();\n  const history = useHistory();\n  const { setUserData } = useContext(UserContext);\n\n  const submit = async (e) => {\n    e.preventDefault();\n    const newUser = { email, password,  displayName };\n\n    await Axios.post(\"http://localhost:3001/users/register\", newUser);\n    const loginRes = await Axios.post(\"http://localhost:3001/users/login\", {\n      email,\n      password,\n    });\n    setUserData({\n      token: loginRes.data.token,\n      user: loginRes.data.user,\n    });\n    localStorage.setItem(\"auth-token\", loginRes.data.token);\n    localStorage.setItem(\"email\", email);\n    history.push(\"/invoice\");\n\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={submit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} >\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"User Name\"\n                autoFocus\n                onChange={(e) => setDisplayName(e.target.value)}\n              />\n            </Grid>\n           \n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              \n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container className={classes.center}>\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/pages/Invoice.js",["73","74","75","76","77","78","79","80","81"],"/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/pages/Home.js",["82","83"],"import React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { Container } from \"@material-ui/core\";\nimport AuthOptions from \"../auth/AuthOptions\";\n// import \"fontsource-roboto\";\nimport \"./Home.css\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport theme from \"../../theme\";\nimport Form from \"../form/Form\";\nimport TopNav from \"../topNav/TopNav\";\n\n// import Box from \"@material-ui/core/Box\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <TopNav />\n      <div className=\"main\">\n        <Container maxWidth=\"sm\">\n          <Form />\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\n","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/theme.js",[],"/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/AuthOptions.js",["84"],"import React, { Component, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport \"./Auth.css\";\n\nexport default function AuthOptions() {\n  const history = useHistory();\n\n  const { userData, setUserData } = useContext(UserContext);\n\n  const register = () => history.push(\"/register\");\n  const login = () => history.push(\"/login\");\n  const createInvoice = () => history.push(\"/invoice\");\n  const logout = () => {\n    setUserData({\n      token: undefined,\n      user: undefined,\n    });\n    localStorage.setItem(\"auth-token\", \"\");\n  };\n\n  return (\n    <div className=\"\">\n      {userData.user ? (\n        <>\n          <button onClick={createInvoice}>Create Invoice</button>\n          <button onClick={logout}>Logout</button>\n        </>\n      ) : (\n        <>\n          <button onClick={register}>REGISTER </button>\n          <button onClick={login}>LOGIN </button>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/utils/API.js",[],"/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/topNav/TopNav.js",[],"/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/form/Form.js",["85","86","87","88","89","90","91"],"import React, { useState, useContext, useEffect, useRef } from \"react\";\nimport UserContext from \"../../context/UserContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Grid } from \"@material-ui/core\";\nimport { purple, yellow } from \"@material-ui/core/colors\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport moment from \"moment\";\nimport { saveAs } from \"file-saver\";\nimport FileBase from \"react-file-base64\";\nimport Item from \"./Item\";\nimport {\n  createInvoice,\n  getLogo,\n  // getInvoice,\n  // searchInvoice,\n  // isPastDue,\n  // searchByName,\n} from \"../../utils/API\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      // width: \"25ch\",\n      flexGrow: 1,\n    },\n  },\n  gridContainer: {\n    backgroundColor: yellow[400],\n    justifyContent: \"space-around\",\n    margin: \"1.5rem \",\n    padding: \"1.5rem\",\n  },\n  textField: {\n    color: purple[50],\n  },\n  thankYou: {\n    width: \"100%\",\n  },\n  addIcon: {\n    margin: \"10px\",\n  },\n  logo: {\n    height: \"60px\",\n    width: \"60px\",\n  },\n  logo_grow: {\n    border: \"4px solid green\",\n  },\n}));\n\nexport default function BasicTextFields() {\n  const classes = useStyles();\n  const changeSizeRef = useRef(0);\n  const [data, setData] = useState([{}]);\n  const [logo, setLogo] = useState([{}]);\n  const [item, setItem] = useState([]);\n  const [selected, setSelected] = useState();\n  const [inputList, setInputList] = useState([\n    {\n      itemName: \"\",\n      description: \"\",\n      quantity: \"\",\n      rate: \"\",\n    },\n  ]);\n  const { userData } = useContext(UserContext);\n\n  useEffect(() => {\n    getLogo().then((res) => {\n      setLogo(res.data);\n    });\n  }, []);\n  console.log(changeSizeRef);\n  // console.log(data);\n  // console.log(selected);\n\n  const handleInputChange = (e, index) => {\n    const { name, value } = e.target;\n    console.log(value);\n    const list = [...inputList];\n    list[index][name] = value;\n    setInputList(list);\n    console.log(inputList);\n  };\n\n  const changeSize = (index) => {\n    let currentIndex = (changeSizeRef.current.id = index);\n    console.log(currentIndex);\n    if (!selected && currentIndex === index) {\n      changeSizeRef.current.style.border = \"2px solid red\";\n    } else {\n      changeSizeRef.current.style.border = \"none\";\n    }\n  };\n\n  // handle click event of the Remove button\n  const handleRemoveClick = (index) => {\n    const list = [...inputList];\n    list.splice(index, 1);\n    setInputList(list);\n  };\n\n  // handle click event of the Add button\n  const handleAddClick = () => {\n    setInputList([\n      ...inputList,\n      { itemName: \"\", description: \"\", quantity: \"\", rate: \"\" },\n    ]);\n  };\n\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const invoiceDueDate = moment().add(data.paymentTerms, \"days\");\n    let taxConversion = data.tax / 100;\n    console.log(taxConversion);\n    let totalPrice = (data.quantity || data.hours) * data.rate;\n\n    let taxTotal = taxConversion * totalPrice;\n    let finalTotal = totalPrice + taxTotal;\n    // let finalTotal = data.quantity * data.rate;\n    console.log(totalPrice);\n\n    let randomInvoiceNumber = getRandomInt(9999, 100000);\n    await createInvoice({\n      invoiceNumber: randomInvoiceNumber,\n      name: data.name.toUpperCase(),\n      dueDate: invoiceDueDate,\n      tax: data.tax,\n      paymentTerms: data.paymentTerms,\n      item: inputList,\n      pastDue: false,\n      clientName: data.clientName,\n      clientEmail: data.clientEmail,\n      clientNumber: data.clientNumber,\n      clientAddress: data.clientAddress,\n\n      rate: data.rate,\n      preTax: totalPrice,\n      total: finalTotal,\n      thankYouMessage: data.thankYouMessage,\n\n      selectedFile: data.selectedFile,\n      selectedLogo: data.selelctedLogo,\n      // creator: userData.user.id,\n    });\n    await clearForm();\n  };\n\n  const clearForm = () => {\n    setData({\n      name: \"\",\n      quantity: \"\",\n      tax: \"\",\n      description: \"\",\n      hours: \"\",\n      rate: \"\",\n    });\n  };\n\n  return (\n    <div className={classes.root} noValidate autoComplete=\"off\">\n      <form onSubmit={handleSubmit}>\n        Upload a logo{\" \"}\n        <FileBase\n          id=\"upload logo\"\n          type=\"file\"\n          multiple={false}\n          onDone={({ base64 }) => setData({ ...data, selectedFile: base64 })}\n        />\n        {logo.map((x, i) => {\n          // let selectedClass = selected ? \"logo_grow\" : \"\";\n          return (\n            <>\n              {x.selectedFile ? (\n                <div className={classes.logo}>\n                  <img\n                    // className={selected ? classes.logo_grow : \"\"}\n                    ref={changeSizeRef}\n                    style={{ height: \"100%\", width: \"100%\" }}\n                    src={x.selectedFile}\n                    onClick={() => {\n                      setData({ ...data, selectedLogo: x.selectedFile });\n                      changeSize(i);\n                      setSelected(!selected);\n                    }}\n                  />\n                </div>\n              ) : (\n                \"\"\n              )}\n            </>\n          );\n        })}\n        <Grid container spacing={3} className={classes.gridContainer}>\n          <Grid item>\n            <TextField\n              className={classes.textField}\n              id=\"outlined-basic\"\n              label=\"Your Name\"\n              variant=\"outlined\"\n              onChange={(e) => setData({ ...data, name: e.target.value })}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Your Address\"\n              variant=\"outlined\"\n              onChange={(e) => setData({ ...data, address: e.target.value })}\n            />\n          </Grid>\n\n          <Grid item>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Payment Terms\"\n              variant=\"outlined\"\n              onChange={(e) =>\n                setData({ ...data, paymentTerms: e.target.value })\n              }\n            />\n          </Grid>\n        </Grid>\n        {/* ---------------------------------------------------------- */}\n        <Grid\n          container\n          item\n          spacing={3}\n          className={classes.gridContainer}\n          direction=\"row\"\n        >\n          <Grid item>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Client Name/Business\"\n              variant=\"outlined\"\n              onChange={(e) => setData({ ...data, clientName: e.target.value })}\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Client Email\"\n              variant=\"outlined\"\n              onChange={(e) =>\n                setData({ ...data, clientEmail: e.target.value })\n              }\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Client's Phone\"\n              variant=\"outlined\"\n              onChange={(e) =>\n                setData({ ...data, clientNumber: e.target.value })\n              }\n            />\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Client's Address\"\n              variant=\"outlined\"\n              onChange={(e) =>\n                setData({ ...data, clientAddress: e.target.value })\n              }\n            />\n          </Grid>\n        </Grid>\n        {/* -------------------------------------------------------- */}\n        <Grid container spacing={3} className={classes.gridContainer}>\n          {inputList.map((x, i) => {\n            return (\n              <>\n                <Grid item xs={3}>\n                  <TextField\n                    className={classes.textField}\n                    name=\"itemName\"\n                    id=\"itemName\"\n                    label=\"Item Name\"\n                    variant=\"outlined\"\n                    value={x.itemName}\n                    onChange={(e) => handleInputChange(e, i)}\n                  />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField\n                    id=\"description\"\n                    name=\"description\"\n                    label=\"Description\"\n                    variant=\"outlined\"\n                    value={x.description}\n                    onChange={(e) => handleInputChange(e, i)}\n                  />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField\n                    id=\"quantity\"\n                    name=\"quantity\"\n                    label=\"Quantity\"\n                    variant=\"outlined\"\n                    value={x.quantity}\n                    onChange={(e) => handleInputChange(e, i)}\n                  />\n                </Grid>\n                <Grid item xs={3}>\n                  <TextField\n                    id=\"rate\"\n                    name=\"rate\"\n                    label=\"Rate\"\n                    variant=\"outlined\"\n                    value={x.rate}\n                    onChange={(e) => handleInputChange(e, i)}\n                  />\n                </Grid>\n              </>\n            );\n          })}\n\n          {/* {item.map((result) => result)} */}\n          <AddIcon className={classes.addIcon} onClick={handleAddClick} />\n        </Grid>\n        <br />\n        <Grid container spacing={3} className={classes.gridContainer}>\n          <Grid item xs={12}>\n            <TextField\n              className={classes.thankYou}\n              id=\"outlined-basic\"\n              label=\"Thank you message\"\n              variant=\"outlined\"\n              onChange={(e) =>\n                setData({ ...data, thankYouMessage: e.target.value })\n              }\n            />\n            <button type=\"submit\">Create Invoice</button>\n          </Grid>\n        </Grid>\n      </form>\n    </div>\n  );\n}\n","/Users/emanuil_vartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/form/Item.js",["92"],"import React from \"react\";\nimport { TextField, Grid } from \"@material-ui/core\";\nfunction Item() {\n  return (\n    <div>\n      <Grid item xs={3}>\n        <h5>Worked!</h5>\n        {/* <TextField\n              className={classes.textField}\n              id=\"itemName\"\n              label=\"Item Name\"\n              variant=\"outlined\"\n              onChange={(e) => setData({ ...data, itemName: e.target.value })}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              id=\"description\"\n              label=\"Description\"\n              variant=\"outlined\"\n              onChange={(e) =>\n                setData({ ...data, description: e.target.value })\n              }\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              id=\"quantity\"\n              label=\"Quantity\"\n              variant=\"outlined\"\n              onChange={(e) => setData({ ...data, quantity: e.target.value })}\n            />\n          </Grid>\n          <Grid item xs={3}>\n            <TextField\n              id=\"rate\"\n              label=\"Rate\"\n              variant=\"outlined\"\n              onChange={(e) => setData({ ...data, rate: e.target.value })}\n            /> */}\n      </Grid>\n    </div>\n  );\n}\n\nexport default Item;\n",{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":11,"column":10,"nodeType":"99","messageId":"100","endLine":11,"endColumn":26},{"ruleId":"97","severity":1,"message":"98","line":19,"column":10,"nodeType":"99","messageId":"100","endLine":19,"endColumn":26},{"ruleId":"97","severity":1,"message":"101","line":98,"column":7,"nodeType":"99","messageId":"100","endLine":98,"endColumn":16},{"ruleId":"97","severity":1,"message":"102","line":74,"column":8,"nodeType":"99","messageId":"100","endLine":74,"endColumn":24},{"ruleId":"97","severity":1,"message":"103","line":75,"column":8,"nodeType":"99","messageId":"100","endLine":75,"endColumn":16},{"ruleId":"97","severity":1,"message":"104","line":16,"column":10,"nodeType":"99","messageId":"100","endLine":16,"endColumn":13},{"ruleId":"97","severity":1,"message":"105","line":19,"column":11,"nodeType":"99","messageId":"100","endLine":19,"endColumn":19},{"ruleId":"97","severity":1,"message":"106","line":23,"column":10,"nodeType":"99","messageId":"100","endLine":23,"endColumn":28},{"ruleId":"97","severity":1,"message":"107","line":24,"column":10,"nodeType":"99","messageId":"100","endLine":24,"endColumn":29},{"ruleId":"97","severity":1,"message":"108","line":27,"column":18,"nodeType":"99","messageId":"100","endLine":27,"endColumn":27},{"ruleId":"97","severity":1,"message":"109","line":30,"column":22,"nodeType":"99","messageId":"100","endLine":30,"endColumn":35},{"ruleId":"97","severity":1,"message":"110","line":63,"column":9,"nodeType":"99","messageId":"100","endLine":63,"endColumn":19},{"ruleId":"97","severity":1,"message":"111","line":94,"column":9,"nodeType":"99","messageId":"100","endLine":94,"endColumn":22},{"ruleId":"97","severity":1,"message":"112","line":110,"column":9,"nodeType":"99","messageId":"100","endLine":110,"endColumn":27},{"ruleId":"97","severity":1,"message":"113","line":4,"column":8,"nodeType":"99","messageId":"100","endLine":4,"endColumn":19},{"ruleId":"97","severity":1,"message":"114","line":23,"column":9,"nodeType":"99","messageId":"100","endLine":23,"endColumn":16},{"ruleId":"97","severity":1,"message":"115","line":1,"column":17,"nodeType":"99","messageId":"100","endLine":1,"endColumn":26},{"ruleId":"97","severity":1,"message":"116","line":8,"column":10,"nodeType":"99","messageId":"100","endLine":8,"endColumn":16},{"ruleId":"97","severity":1,"message":"117","line":10,"column":8,"nodeType":"99","messageId":"100","endLine":10,"endColumn":12},{"ruleId":"97","severity":1,"message":"118","line":57,"column":10,"nodeType":"99","messageId":"100","endLine":57,"endColumn":14},{"ruleId":"97","severity":1,"message":"119","line":57,"column":16,"nodeType":"99","messageId":"100","endLine":57,"endColumn":23},{"ruleId":"97","severity":1,"message":"105","line":67,"column":11,"nodeType":"99","messageId":"100","endLine":67,"endColumn":19},{"ruleId":"97","severity":1,"message":"120","line":98,"column":9,"nodeType":"99","messageId":"100","endLine":98,"endColumn":26},{"ruleId":"121","severity":1,"message":"122","line":184,"column":19,"nodeType":"123","endLine":194,"endColumn":21},{"ruleId":"97","severity":1,"message":"124","line":2,"column":10,"nodeType":"99","messageId":"100","endLine":2,"endColumn":19},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'checkAuth' is assigned a value but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'set' is defined but never used.","'userData' is assigned a value but never used.","'showInvoiceResults' is assigned a value but never used.","'showCustomerResults' is assigned a value but never used.","'setSearch' is assigned a value but never used.","'setSearchName' is assigned a value but never used.","'totalPrice' is assigned a value but never used.","'handlePastDue' is assigned a value but never used.","'handleSearchByName' is assigned a value but never used.","'AuthOptions' is defined but never used.","'classes' is assigned a value but never used.","'Component' is defined but never used.","'saveAs' is defined but never used.","'Item' is defined but never used.","'item' is assigned a value but never used.","'setItem' is assigned a value but never used.","'handleRemoveClick' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextField' is defined but never used.","no-global-assign","no-unsafe-negation"]