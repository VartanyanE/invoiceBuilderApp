[{"C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\index.js":"1","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\App.js":"2","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\context\\UserContext.js":"3","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\components\\pages\\Home.js":"4","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\components\\auth\\Login.js":"5","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\components\\auth\\Register.js":"6","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\components\\pages\\Invoice.js":"7","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\components\\auth\\AuthOptions.js":"8","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\utils\\API.js":"9"},{"size":207,"mtime":1610087587793,"results":"10","hashOfConfig":"11"},{"size":6455,"mtime":1610514450226,"results":"12","hashOfConfig":"11"},{"size":79,"mtime":1610087587792,"results":"13","hashOfConfig":"11"},{"size":179,"mtime":1610087587791,"results":"14","hashOfConfig":"11"},{"size":1364,"mtime":1610087587790,"results":"15","hashOfConfig":"11"},{"size":1964,"mtime":1610087587791,"results":"16","hashOfConfig":"11"},{"size":5412,"mtime":1610609781555,"results":"17","hashOfConfig":"11"},{"size":986,"mtime":1610088272156,"results":"18","hashOfConfig":"11"},{"size":963,"mtime":1610425814571,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"37j8zr",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\index.js",[],["43","44"],"C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\App.js",["45"],"import React, { useEffect, useState } from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./components/pages/Home\";\r\nimport Login from \"./components/auth/Login\";\r\nimport Register from \"./components/auth/Register\";\r\nimport Invoice from \"./components/pages/Invoice\"\r\nimport UserContext from \"./context/UserContext\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nconst App = () => {\r\n  const [userData, setUserData] = useState({\r\n    token: undefined,\r\n    user: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const checkLoggedIn = async () => {\r\n      let token = localStorage.getItem(\"auth-token\");\r\n      if (token === null) {\r\n        localStorage.setItem(\"auth-token\", \"\");\r\n        token = \"\";\r\n      }\r\n      const tokenRes = await axios.post(\r\n        \"http://localhost:3001/users/tokenIsValid\",\r\n        null,\r\n        { headers: { \"x-auth-token\": token } }\r\n      );\r\n      console.log(tokenRes.data);\r\n      if (tokenRes.data) {\r\n        const userRes = await axios.get(\"http://localhost:3001/users/\", {\r\n          headers: { \"x-auth-token\": token },\r\n        });\r\n\r\n        setUserData({\r\n          token,\r\n          user: userRes.data,\r\n        });\r\n      }\r\n    };\r\n\r\n    checkLoggedIn();\r\n    console.log(userData);\r\n  }, []);\r\n  return (\r\n    <BrowserRouter>\r\n      <UserContext.Provider value={{ userData, setUserData }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route path=\"/login\" component={Login} />\r\n          <Route path=\"/register\" component={Register} />\r\n          <Route path=\"/invoice\" component={Invoice} />\r\n        </Switch>\r\n      </UserContext.Provider>\r\n    </BrowserRouter>\r\n  );\r\n\r\n  // const [data, setData] = useState([{}]);\r\n  // const [editData, setEditData] = useState([{}]);\r\n  // const [dataBase, setDataBase] = useState([{}]);\r\n  // const [edit, setEdit] = useState(null);\r\n  // const [currentId, setCurrentId] = useState(\"\");\r\n  // // const [like, setLike] = useState({});\r\n  // const [image, setImage] = useState({});\r\n  // const [search, setSearch] = useState({\r\n  //   title: \"\",\r\n  // });\r\n  // const [searchResultsState, setSearchResultsState] = useState([{}]);\r\n\r\n  // // when our component mounts we run getData from our API and set our state\r\n  // useEffect(() => {\r\n  //   getData().then(({ data }) => setDataBase(data));\r\n  // }, []);\r\n\r\n  // // when form is submmited we run createData from our API  and pass in our state\r\n  // const handleSubmit = async (event) => {\r\n  //   event.preventDefault();\r\n  //   await createData(data);\r\n  //   getData().then(({ data }) => setDataBase(data));\r\n  //   console.log(dataBase);\r\n  // };\r\n\r\n  // const handleSearch = async (event) => {\r\n  //   event.preventDefault();\r\n  //  await searchResults(search.title).then(({ data }) => setSearchResultsState(data));\r\n  //  await console.log(searchResultsState)\r\n  // };\r\n\r\n  // const handleButton = async (id) => {\r\n  //   await setCurrentId(id);\r\n\r\n  //   setEdit(true);\r\n  // };\r\n\r\n  // const handleEdit = async () => {\r\n  //   setEdit(false);\r\n  //   await upDateData(currentId, editData);\r\n  //   getData().then(({ data }) => setDataBase(data));\r\n  // };\r\n\r\n  // const handleLike = async (id) => {\r\n  //   await setCurrentId(id);\r\n  //   console.log(searchResultsState);\r\n\r\n  //   await likeCount(id);\r\n  //   await getData().then(({ data }) => setDataBase(data));\r\n  // };\r\n\r\n  // const uploadImage = async () => {\r\n  //   console.log(image);\r\n  //   await createData(image);\r\n  //   getData().then(({ data }) => setDataBase(data));\r\n  // };\r\n\r\n  // const handleDelete = async (id) => {\r\n  //   await deleteData(id);\r\n  //   getData().then(({ data }) => setDataBase(data));\r\n  //   setImage(\"\");\r\n  // };\r\n  // console.log(dataBase);\r\n\r\n  // return (\r\n  //   <div>\r\n  //     <form onSubmit={handleSubmit}>\r\n  //       <label>Title</label>\r\n  //       <input\r\n  //         value={data.title}\r\n  //         onChange={(e) => setData({ ...data, title: e.target.value })}\r\n  //       />\r\n  //       <label>Message</label>\r\n  //       <input\r\n  //         value={data.message}\r\n  //         onChange={(e) => setData({ ...data, message: e.target.value })}\r\n  //       />\r\n  //       <FileBase\r\n  //         type=\"file\"\r\n  //         multiple={false}\r\n  //         onDone={({ base64 }) => setData({ ...data, selectedFile: base64 })}\r\n  //       />{\" \"}\r\n  //       <button type=\"submit\">Submit Data</button>\r\n  //     </form>\r\n\r\n  //     <button type=\"submit\" onClick={uploadImage}>\r\n  //       Upload Image\r\n  //     </button>\r\n\r\n  //     <div>\r\n  //       {dataBase.map((item) => (\r\n  //         <div>\r\n  //           <h5>\r\n  //             {item.title} {item.message}LIKES---{item.likeCount}\r\n  //             <img src={item.selectedFile} alt=\"\" />\r\n  //             <button onClick={() => handleButton(item._id)}>Edit</button>{\" \"}\r\n  //             <button onClick={() => handleLike(item._id)}>Like</button>{\" \"}\r\n  //             <button onClick={() => handleDelete(item._id)}>Delete</button>{\" \"}\r\n  //           </h5>\r\n  //         </div>\r\n  //       ))}\r\n\r\n  //       {edit ? (\r\n  //         <form onSubmit={handleEdit}>\r\n  //           <label>Title</label>\r\n  //           <input\r\n  //             value={editData.title}\r\n  //             onChange={(e) =>\r\n  //               setEditData({ ...editData, title: e.target.value })\r\n  //             }\r\n  //           />\r\n  //           <label>Message</label>\r\n  //           <input\r\n  //             value={editData.message}\r\n  //             onChange={(e) =>\r\n  //               setEditData({ ...editData, message: e.target.value })\r\n  //             }\r\n  //           />\r\n  //           <button type=\"submit\">Edit Data</button>\r\n  //         </form>\r\n  //       ) : (\r\n  //         \"\"\r\n  //       )}\r\n  //     </div>\r\n\r\n  //     <div>\r\n  //       <form onSubmit={handleSearch}>\r\n  //         <input\r\n  //           value={search.title}\r\n  //           onChange={(e) => {\r\n  //             setSearch({ ...search, title: e.target.value });\r\n  //           }}\r\n  //         />\r\n  //         <button type=\"submit>\">Search</button>\r\n  //       </form>\r\n  //     </div>\r\n\r\n  //     <div>\r\n  //       {searchResultsState ? searchResultsState.map((results) => (\r\n  //       <h2>Title: {results.title} <br/>\r\n  //           Message: {results.message}<br/>\r\n  //           Likes: {results.likeCount}</h2>\r\n  //       ))  : \"\"}\r\n  //     </div>\r\n  //   </div>\r\n  // );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\context\\UserContext.js",[],"C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\components\\pages\\Home.js",[],"C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\components\\pages\\Invoice.js",["46"],"import React, { useEffect, useState, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { createInvoice, getInvoice, searchInvoice } from \"../../utils/API\";\r\nimport UserContext from \"../../context/UserContext\";\r\nimport { saveAs } from \"file-saver\";\r\nimport FileBase from \"react-file-base64\";\r\nimport moment from \"moment\";\r\n\r\nexport default function Invoice() {\r\n  const { userData } = useContext(UserContext);\r\n\r\n  const [data, setData] = useState([{}]);\r\n  const [invoice, setInvoice] = useState();\r\n  const [search, setSearch] = useState({\r\n    invoiceNumber: \"\",\r\n  });\r\n  const [searchResultsState, setSearchResultsState] = useState(null);\r\n  useEffect(() => {\r\n    \r\n    getInvoice().then((res) => {\r\n      \r\n      setInvoice(res.data);\r\n    });\r\n  }, [data]);\r\n\r\n  useEffect(() => {\r\n    searchInvoice(search.invoiceNumber).then(({ data }) =>\r\n      setSearchResultsState(data)\r\n    );\r\n  }, [search]);\r\n\r\n  function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n  }\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n   \r\n    const invoiceDueDate = moment().add(30, \"days\");\r\n    let totalPriceHours = data.hours * data.rate;\r\n    let totalPriceQuantity = data.quantity * data.rate;\r\n    let randomInvoiceNumber = getRandomInt(9999, 100000);\r\n    await createInvoice({\r\n      invoiceNumber: randomInvoiceNumber,\r\n      name: data.name,\r\n      dueDate: invoiceDueDate,\r\n     \r\n      description: data.description,\r\n      hours: data.hours,\r\n      quantity: data.quantity,\r\n      rate: data.rate,\r\n      totalWithHours: totalPriceHours,\r\n      totalWithQuantity: totalPriceQuantity,\r\n      selectedFile: data.selectedFile,\r\n      creator: userData.user.id,\r\n    });\r\n    await clearForm();\r\n  };\r\n\r\n  const handleSearch = async (event) => {\r\n    const invoiceDueDate = moment().add(30, \"days\");\r\n    event.preventDefault();\r\n    await searchInvoice(search.invoiceNumber).then(({ data }) =>\r\n      setSearchResultsState(data)\r\n    );\r\n    await console.log(searchResultsState);\r\n  };\r\n\r\n  const clearForm = () => {\r\n    setData({\r\n      name: \"\",\r\n      quantity: \"\",\r\n      description: \"\",\r\n      hours: \"\",\r\n      rate: \"\",\r\n    });\r\n  };\r\n\r\n  const downloadPDF = async () => {\r\n    console.log(invoice);\r\n    let invoiceObject = {\r\n      invoiceNumber: invoice[0].invoiceNumber,\r\n      name: invoice[0].name,\r\n      dueDate: invoice[0].dueDate,\r\n      description: invoice[0].description,\r\n      hours: invoice[0].hours,\r\n      rate: invoice[0].rate,\r\n      total: invoice[0].total,\r\n      selectedFile: invoice[0].selectedFile,\r\n    };\r\n    console.log(invoiceObject);\r\n    await axios\r\n      .post(\"/create-pdf\", invoiceObject)\r\n      .then(() => axios.get(\"/create-pdf/fetch-pdf\", { responseType: \"blob\" }))\r\n      .then((res) => {\r\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\r\n\r\n        saveAs(pdfBlob, \"newPdf.pdf\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Name</label>\r\n        <input\r\n          value={data.name}\r\n          onChange={(e) => setData({ ...data, name: e.target.value })}\r\n        />\r\n        <br />\r\n        <label>Description</label>\r\n        <input\r\n          value={data.description}\r\n          onChange={(e) => setData({ ...data, description: e.target.value })}\r\n        />\r\n        <br />\r\n        <label>Hours</label>\r\n        <input\r\n          value={data.hours}\r\n          onChange={(e) => setData({ ...data, hours: e.target.value })}\r\n        />\r\n        <br />\r\n        <label>Quantity</label>\r\n        <input\r\n          value={data.quantity}\r\n          onChange={(e) => setData({ ...data, quantity: e.target.value })}\r\n        />\r\n        <br />\r\n        <label>Rate</label>\r\n        <input\r\n          value={data.rate}\r\n          onChange={(e) => setData({ ...data, rate: e.target.value })}\r\n        />{\" \"}\r\n        <br />\r\n        Upload a logo{\" \"}\r\n        <FileBase\r\n          id=\"upload logo\"\r\n          type=\"file\"\r\n          multiple={false}\r\n          onDone={({ base64 }) => setData({ ...data, selectedFile: base64 })}\r\n        />{\" \"}\r\n        <br />\r\n        <button type=\"submit\">Submit Data</button>\r\n        <br />\r\n      </form>\r\n      <button onClick={downloadPDF}>Download PDF</button>\r\n      <div>\r\n        <form onSubmit={handleSearch}>\r\n          <input\r\n            placeholder=\"Enter Invoice Number\"\r\n            value={search.invoiceNumber}\r\n            onChange={(e) => {\r\n              setSearch({ ...search, invoiceNumber: e.target.value });\r\n            }}\r\n          />\r\n          {/* <button type=\"submit>\">Search</button> */}\r\n        </form>\r\n      </div>\r\n\r\n      <div>\r\n        {searchResultsState\r\n          ? searchResultsState.map((results) => (\r\n              <h2>\r\n                Invoice Number: {results.invoiceNumber} <br />\r\n                Company Name: {results.name}\r\n                <br />\r\n                Description: {results.description}\r\n                <br />\r\n                Hours: {results.hours}\r\n                <br />\r\n                Rate: {results.rate}\r\n                <br />\r\n                Total: {results.total}\r\n                <br />\r\n                PastDue: {results.pastDue ? \"Yes\" : \"No\"}\r\n              </h2>\r\n            ))\r\n          : \"\"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\components\\auth\\AuthOptions.js",["47"],"import React, { Component, useContext } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport UserContext from \"../../context/UserContext\";\r\n\r\nexport default function AuthOptions() {\r\n  const history = useHistory();\r\n\r\n  const { userData, setUserData } = useContext(UserContext);\r\n\r\n  const register = () => history.push(\"/register\");\r\n  const login = () => history.push(\"/login\");\r\n  const createInvoice = () => history.push(\"/invoice\");\r\n  const logout = () => {\r\n    setUserData({\r\n      token: undefined,\r\n      user: undefined,\r\n    });\r\n    localStorage.setItem(\"auth-token\", \"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {userData.user ? (\r\n        <>\r\n        <button onClick={createInvoice}>Create Invoice</button>\r\n        <button onClick={logout}>Logout</button>\r\n        \r\n        </>\r\n      ) : (\r\n        <>\r\n          <button onClick={register}>Register</button>\r\n          <button onClick={login}>Login</button>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\varta\\Desktop\\projects\\invoiceBuilder\\client\\src\\utils\\API.js",[],["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":45,"column":6,"nodeType":"56","endLine":45,"endColumn":8,"suggestions":"57"},{"ruleId":"58","severity":1,"message":"59","line":64,"column":11,"nodeType":"60","messageId":"61","endLine":64,"endColumn":25},{"ruleId":"58","severity":1,"message":"62","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":26},{"ruleId":"50","replacedBy":"63"},{"ruleId":"52","replacedBy":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userData'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-unused-vars","'invoiceDueDate' is assigned a value but never used.","Identifier","unusedVar","'Component' is defined but never used.",["65"],["66"],"no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [userData]",{"range":"70","text":"71"},[1269,1271],"[userData]"]