[{"/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/index.js":"1","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/App.js":"2","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/context/UserContext.js":"3","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/context/ClickedContext.js":"4","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/Login.js":"5","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/pages/Invoice.js":"6","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/Register.js":"7","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/pages/Home.js":"8","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/AuthOptions.js":"9","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/utils/API.js":"10","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/theme.js":"11","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/form/Form.js":"12","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/topNav/TopNav.js":"13"},{"size":197,"mtime":1611388267864,"results":"14","hashOfConfig":"15"},{"size":1928,"mtime":1611727768097,"results":"16","hashOfConfig":"15"},{"size":76,"mtime":1611388267864,"results":"17","hashOfConfig":"15"},{"size":76,"mtime":1611727756195,"results":"18","hashOfConfig":"15"},{"size":5246,"mtime":1611729440796,"results":"19","hashOfConfig":"15"},{"size":7865,"mtime":1611727768098,"results":"20","hashOfConfig":"15"},{"size":6768,"mtime":1611727756194,"results":"21","hashOfConfig":"15"},{"size":878,"mtime":1611727768098,"results":"22","hashOfConfig":"15"},{"size":980,"mtime":1611388267862,"results":"23","hashOfConfig":"15"},{"size":1105,"mtime":1611727768099,"results":"24","hashOfConfig":"15"},{"size":327,"mtime":1611727768098,"results":"25","hashOfConfig":"15"},{"size":3425,"mtime":1611727768097,"results":"26","hashOfConfig":"15"},{"size":1193,"mtime":1611727768098,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"as17t9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/index.js",[],["60","61"],"/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/App.js",["62"],"import React, { useEffect, useState } from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Home from \"./components/pages/Home\";\n// import Grids from \"./components/grids/Grids\";\nimport Login from \"./components/auth/Login\";\nimport Register from \"./components/auth/Register\";\nimport Invoice from \"./components/pages/Invoice\";\nimport UserContext from \"./context/UserContext\";\nimport ClickedContext from \"./context/ClickedContext\";\nimport axios from \"axios\";\nimport { CircularProgress } from \"@material-ui/core\";\n\nconst App = () => {\n  const [userData, setUserData] = useState(false);\n\n  const [clicked, setClicked] = useState(false);\n\n  useEffect(() => {\n    const checkLoggedIn = async () => {\n      let token = localStorage.getItem(\"auth-token\");\n      if (token === null) {\n        localStorage.setItem(\"auth-token\", \"\");\n        token = \"\";\n      }\n      const tokenRes = await axios.post(\n        \"http://localhost:3001/users/tokenIsValid\",\n        null,\n        { headers: { \"x-auth-token\": token } }\n      );\n      console.log(tokenRes.data);\n      if (tokenRes.data) {\n        const userRes = await axios.get(\"http://localhost:3001/users/\", {\n          headers: { \"x-auth-token\": token },\n        });\n\n        setUserData({\n          token,\n          user: userRes.data,\n        });\n      }\n    };\n\n    checkLoggedIn();\n  }, []);\n  return (\n    <BrowserRouter>\n      <UserContext.Provider value={{ userData, setUserData }}>\n\n        <ClickedContext.Provider value={{ clicked, setClicked }}>\n          <Switch>\n            <Route exact path=\"/\" component={userData ? Home : Login} />\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/register\" component={Register} />\n            <Route path=\"/invoice\" component={Invoice} />\n          </Switch>\n        </ClickedContext.Provider>\n\n      </UserContext.Provider>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/context/UserContext.js",[],"/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/context/ClickedContext.js",[],"/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/Login.js",["63","64"],"/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/pages/Invoice.js",["65"],"import React, { useEffect, useState, useContext } from \"react\";\nimport axios from \"axios\";\nimport {\n  createInvoice,\n  getInvoice,\n  searchInvoice,\n  isPastDue,\n  searchByName,\n} from \"../../utils/API\";\nimport UserContext from \"../../context/UserContext\";\nimport { saveAs } from \"file-saver\";\nimport FileBase from \"react-file-base64\";\nimport moment from \"moment\";\nimport { set } from \"mongoose\";\n\nexport default function Invoice() {\n  const { userData } = useContext(UserContext);\n  const [currentId, setCurrentId] = useState();\n  const [arrayGrab, setArrayGrab] = useState([{}]);\n  const [data, setData] = useState([{}]);\n  const [showInvoiceResults, setShowInvoiceResults] = useState(false);\n  const [showCustomerResults, setShowCustomerResults] = useState(false);\n\n  const [invoice, setInvoice] = useState([{}]);\n  const [search, setSearch] = useState({\n    invoiceNumber: \"\",\n  });\n  const [searchName, setSearchName] = useState({\n    name: \"\",\n  });\n  const [searchResultsState, setSearchResultsState] = useState([{}]);\n  const [searchResultsName, setSearchResultsName] = useState([{}]);\n\n  useEffect(() => {\n    getInvoice().then((res) => {\n      setInvoice(res.data);\n      console.log(res.data);\n    });\n  }, [data]);\n\n  useEffect(() => {\n    const arrayGrabber = async () => {\n      await setArrayGrab(searchResultsName);\n    };\n    arrayGrabber();\n  }, [searchResultsName]);\n\n  console.log(arrayGrab);\n  function getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n  }\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    const invoiceDueDate = moment().add(data.paymentTerms, \"days\");\n    let taxConversion = data.tax / 100;\n    console.log(taxConversion);\n    let totalPrice = (data.quantity || data.hours) * data.rate;\n    let taxTotal = taxConversion * totalPrice;\n    let finalTotal = totalPrice + taxTotal;\n    console.log(finalTotal);\n\n    let randomInvoiceNumber = getRandomInt(9999, 100000);\n    await createInvoice({\n      invoiceNumber: randomInvoiceNumber,\n      name: data.name.toUpperCase(),\n      dueDate: invoiceDueDate,\n      tax: data.tax,\n      paymentTerms: data.paymentTerms,\n      pastDue: false,\n\n      description: data.description,\n      hours: data.hours,\n      quantity: data.quantity,\n      rate: data.rate,\n      total: finalTotal,\n\n      selectedFile: data.selectedFile,\n      creator: userData.user.id,\n    });\n    await clearForm();\n  };\n\n  const handlePastDue = async (event) => {\n    event.preventDefault();\n\n    await searchInvoice(search.invoiceNumber).then(({ data }) => {\n      setShowInvoiceResults(true);\n      setSearchResultsState(data);\n      setCurrentId(searchResultsState[0]._id);\n      let currentDate = moment();\n      let dueDate = searchResultsState[0].dueDate;\n      console.log(dueDate);\n      if (currentDate.isAfter(dueDate)) {\n        isPastDue(currentId);\n      }\n    });\n  };\n\n  const handleSearchByName = async (event) => {\n    event.preventDefault();\n\n    await searchByName(searchName.name).then(({ data }) => {\n      setSearchResultsName(data);\n    });\n    await setShowCustomerResults(true);\n  };\n\n  const clearForm = () => {\n    setData({\n      name: \"\",\n      quantity: \"\",\n      tax: \"\",\n      description: \"\",\n      hours: \"\",\n      rate: \"\",\n    });\n  };\n\n  const downloadPDF = async () => {\n    console.log(invoice);\n    let invoiceObject = {\n      invoiceNumber: invoice[0].invoiceNumber,\n      name: invoice[0].name,\n      dueDate: invoice[0].dueDate,\n      description: invoice[0].description,\n      hours: invoice[0].hours,\n      rate: invoice[0].rate,\n      total: invoice[0].total,\n      tax: invoice[0].tax,\n      selectedFile: invoice[0].selectedFile,\n    };\n    console.log(invoiceObject);\n    await axios\n      .post(\"/create-pdf\", invoiceObject)\n      .then(() => axios.get(\"/create-pdf/fetch-pdf\", { responseType: \"blob\" }))\n      .then((res) => {\n        const pdfBlob = new Blob([res.data], { type: \"application/pdf\" });\n\n        saveAs(pdfBlob, \"newPdf.pdf\");\n      });\n  };\n\n  // console.log(arrayGrab);\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>Name</label>\n        <input\n          value={data.name}\n          onChange={(e) => setData({ ...data, name: e.target.value })}\n        />\n        <br />\n        <label>Description</label>\n        <input\n          value={data.description}\n          onChange={(e) => setData({ ...data, description: e.target.value })}\n        />\n        <br />\n        <label>Hours</label>\n        <input\n          value={data.hours}\n          onChange={(e) => setData({ ...data, hours: e.target.value })}\n        />\n        <br />\n        <label>Quantity</label>\n        <input\n          value={data.quantity}\n          onChange={(e) => setData({ ...data, quantity: e.target.value })}\n        />\n        <br />\n        <label>Tax</label>\n        <input\n          placeholder=\"%\"\n          value={data.tax}\n          onChange={(e) => setData({ ...data, tax: e.target.value })}\n        />\n        <br />\n        <label>Payment Terms</label>\n        <input\n          value={data.paymentTerms}\n          onChange={(e) => setData({ ...data, paymentTerms: e.target.value })}\n        />\n        <br />\n        <label>Rate</label>\n        <input\n          value={data.rate}\n          onChange={(e) => setData({ ...data, rate: e.target.value })}\n        />{\" \"}\n        <br />\n        Upload a logo{\" \"}\n        <FileBase\n          id=\"upload logo\"\n          type=\"file\"\n          multiple={false}\n          onDone={({ base64 }) => setData({ ...data, selectedFile: base64 })}\n        />{\" \"}\n        <br />\n        <button type=\"submit\">Submit Data</button>\n        <br />\n      </form>\n      <button onClick={downloadPDF}>Download PDF</button>\n      <div>\n        <form>\n          <input\n            placeholder=\"Enter Invoice Number\"\n            value={search.invoiceNumber}\n            onChange={(e) => {\n              setSearch({ ...search, invoiceNumber: e.target.value });\n            }}\n          />\n          <button onClick={handlePastDue}>Search By Invoice</button>\n        </form>\n      </div>\n      <div>\n        <form>\n          <input\n            placeholder=\"Enter Customer Name\"\n            value={searchName.name}\n            onChange={(e) => {\n              setSearchName({\n                ...searchName,\n                name: e.target.value,\n              });\n            }}\n          />\n          <button onClick={handleSearchByName}>Search By Name</button>\n        </form>\n      </div>\n\n      <div>\n        {showInvoiceResults\n          ? searchResultsState.map((results) => (\n              <h2 key={results._id}>\n                Invoice Number: {results.invoiceNumber} <br />\n                Company Name: {results.name}\n                <br />\n                Description: {results.description}\n                <br />\n                Hours: {results.hours}\n                <br />\n                Rate: {results.rate}\n                <br />\n                Total: {results.total}\n                <br />\n                Status: {results.pastDue ? \"Past Due!\" : \"Current\"}\n              </h2>\n            ))\n          : \"\"}\n      </div>\n      <div>\n        {showCustomerResults\n          ? arrayGrab.map((results) => (\n              <h2 key={results._id}>\n                Invoice Number: {results.invoiceNumber} <br />\n                Company Name: {results.name}\n                <br />\n                Description: {results.description}\n                <br />\n                Hours: {results.hours}\n                <br />\n                Rate: {results.rate}\n                <br />\n                Total: {results.total}\n                <br />\n                Status: {results.pastDue ? \"Past Due!\" : \"Current\"}\n              </h2>\n            ))\n          : \"\"}\n      </div>\n    </div>\n  );\n}\n","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/Register.js",["66","67"],"// import Axios from \"axios\";\n// import React, { useState, useContext } from \"react\";\n// import UserContext from \"../../context/UserContext\";\n// import { useHistory } from \"react-router-dom\";\n\n// export default function Register() {\n//   const [email, setEmail] = useState();\n//   const [password, setPassword] = useState();\n//   const [passwordCheck, setPasswordCheck] = useState();\n//   const [displayName, setDisplayName] = useState();\n//   const history = useHistory();\n//   const { setUserData } = useContext(UserContext);\n\n//   const submit = async (e) => {\n//     e.preventDefault();\n//     const newUser = { email, password, passwordCheck, displayName };\n\n//     await Axios.post(\"http://localhost:3001/users/register\", newUser);\n//     const loginRes = await Axios.post(\"http://localhost:3001/users/login\", {\n//       email,\n//       password,\n//     });\n//     setUserData({\n//       token: loginRes.data.token,\n//       user: loginRes.data.user,\n//     });\n//     localStorage.setItem(\"auth-token\", loginRes.data.token);\n//     history.push(\"/\");\n//   };\n//   return (\n//     <div>\n//       <h2>Register</h2>\n//       <form onSubmit={submit}>\n//         <label htmlFor=\"register-email\">Email</label>\n//         <input\n//           id=\"register-email\"\n//           type=\"email\"\n//           onChange={(e) => setEmail(e.target.value)}\n//         />\n\n//         <label htmlFor=\"register-password\">Password</label>\n//         <input\n//           id=\"register-password\"\n//           type=\"password\"\n//           onChange={(e) => setPassword(e.target.value)}\n//         />\n//         <input\n//           type=\"password\"\n//           placeholder=\"Verify-Password\"\n//           onChange={(e) => setPasswordCheck(e.target.value)}\n//         />\n\n//         <label htmlFor=\"register-display-name\">Display Name</label>\n//         <input\n//           id=\"register-display-name\"\n//           type=\"text\"\n//           onChange={(e) => setDisplayName(e.target.value)}\n//         />\n\n//         <input type=\"submit\" value=\"register\" />\n//       </form>\n//     </div>\n//   );\n// }\n\nimport Axios from \"axios\";\nimport React, { useState, useContext } from \"react\";\nimport UserContext from \"../../context/UserContext\";\nimport { useHistory } from \"react-router-dom\";\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n  center: {\n    justifyContent: \"center\"\n  }\n}));\n\nexport default function SignUp() {\n  const classes = useStyles();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  \n  const [displayName, setDisplayName] = useState();\n  const history = useHistory();\n  const { setUserData } = useContext(UserContext);\n\n  const submit = async (e) => {\n    e.preventDefault();\n    const newUser = { email, password,  displayName };\n\n    await Axios.post(\"http://localhost:3001/users/register\", newUser);\n    const loginRes = await Axios.post(\"http://localhost:3001/users/login\", {\n      email,\n      password,\n    });\n    setUserData({\n      token: loginRes.data.token,\n      user: loginRes.data.user,\n    });\n    localStorage.setItem(\"auth-token\", loginRes.data.token);\n    localStorage.setItem(\"email\", email);\n    history.push(\"/invoice\");\n\n  };\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={submit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} >\n              <TextField\n                autoComplete=\"fname\"\n                name=\"firstName\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"User Name\"\n                autoFocus\n                onChange={(e) => setDisplayName(e.target.value)}\n              />\n            </Grid>\n           \n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              \n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign Up\n          </Button>\n          <Grid container className={classes.center}>\n            <Grid item>\n              <Link href=\"/login\" variant=\"body2\">\n                Already have an account? Sign in\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={5}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/pages/Home.js",["68"],"\nimport React from \"react\";\n// import ReactDOM from \"react-dom\";\nimport { Container } from \"@material-ui/core\";\nimport AuthOptions from \"../auth/AuthOptions\";\nimport \"fontsource-roboto\";\nimport \"./Home.css\";\nimport { ThemeProvider } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport theme from \"../../theme\";\nimport Form from \"../form/Form\";\nimport TopNav from \"../topNav/TopNav\";\n\n// import Box from \"@material-ui/core/Box\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <TopNav />\n      <div className=\"main\">\n        <AuthOptions />\n        <Container maxWidth=\"sm\">\n          <Form />\n        </Container>\n      </div>\n    </ThemeProvider>\n  );\n}\n\n\n","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/auth/AuthOptions.js",["69"],"import React, { Component, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport UserContext from \"../../context/UserContext\";\nimport \"./Auth.css\";\n\nexport default function AuthOptions() {\n  const history = useHistory();\n\n  const { userData, setUserData } = useContext(UserContext);\n\n  const register = () => history.push(\"/register\");\n  const login = () => history.push(\"/login\");\n  const createInvoice = () => history.push(\"/invoice\");\n  const logout = () => {\n    setUserData({\n      token: undefined,\n      user: undefined,\n    });\n    localStorage.setItem(\"auth-token\", \"\");\n  };\n\n  return (\n    <div className=\"\">\n      {userData.user ? (\n        <>\n          <button onClick={createInvoice}>Create Invoice</button>\n          <button onClick={logout}>Logout</button>\n        </>\n      ) : (\n        <>\n          <button onClick={register}>REGISTER </button>\n          <button onClick={login}>LOGIN </button>\n        </>\n      )}\n    </div>\n  );\n}\n","/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/utils/API.js",[],"/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/theme.js",[],"/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/form/Form.js",[],"/Users/emanuilvartanyan/Desktop/Code_Archives/invoiceBuilderApp/client/src/components/topNav/TopNav.js",[],{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":11,"column":10,"nodeType":"76","messageId":"77","endLine":11,"endColumn":26},{"ruleId":"74","severity":1,"message":"75","line":19,"column":10,"nodeType":"76","messageId":"77","endLine":19,"endColumn":26},{"ruleId":"74","severity":1,"message":"78","line":98,"column":7,"nodeType":"76","messageId":"77","endLine":98,"endColumn":16},{"ruleId":"74","severity":1,"message":"79","line":14,"column":10,"nodeType":"76","messageId":"77","endLine":14,"endColumn":13},{"ruleId":"74","severity":1,"message":"80","line":74,"column":8,"nodeType":"76","messageId":"77","endLine":74,"endColumn":24},{"ruleId":"74","severity":1,"message":"81","line":75,"column":8,"nodeType":"76","messageId":"77","endLine":75,"endColumn":16},{"ruleId":"74","severity":1,"message":"82","line":24,"column":9,"nodeType":"76","messageId":"77","endLine":24,"endColumn":16},{"ruleId":"74","severity":1,"message":"83","line":1,"column":17,"nodeType":"76","messageId":"77","endLine":1,"endColumn":26},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'CircularProgress' is defined but never used.","Identifier","unusedVar","'checkAuth' is assigned a value but never used.","'set' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'classes' is assigned a value but never used.","'Component' is defined but never used.","no-global-assign","no-unsafe-negation"]